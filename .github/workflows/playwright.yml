name: Generate lighthouse test report on PR
on:
    pull_request:
        branches: [ main ]
        
jobs:
    automation-test:
        runs-on: ubuntu-latest
        env: 
            COOKIE_KEY: '1267b291500365c42043e04bc69cf24a31495bd8936fc8d6794283675e288fad755971922d45cf1ca0b438df4fc847f39cb0b2aceb3a45673eff231cddb88dc9'

        steps:
          - name: Checkout repo
            uses: actions/checkout@v3

          - name: Install Node.js
            uses: actions/setup-node@v4
            with: 
                node-version: 20
          - run: npm install

          # - uses: actions/checkout@master
          # - run: mkdir -p ${{ github.workspace }}/tmp/artifacts
          # - name: Lighthouse
          #   uses: foo-software/lighthouse-check-action@master
          #   with:
          #     outputDirectory: ${{ github.workspace }}/tmp/artifacts
          #     gitHubAccessToken: ${{ secrets.GITHUB_APP_TOKEN }}
          #     urls: 'https://yral.com/'
          # - name: Upload artifacts
          #   uses: actions/upload-artifact@master
          #   with:
          #     name: Lighthouse reports
          #     path: ${{ github.workspace }}/tmp/artifacts

          - name: Install Lighthouse
            run: npm install -g @lhci/cli@0.13.x

          - name: Run Lighthouse
            id: lhcitests
            run: lhci autorun 
            # env: 
                # LHCI_GITHUB_TOKEN: ${{ secrets.GITHUB_APP_TOKEN }}

          - name: install playwright
            run: npx playwright install    

          - name: run playwright
            id: tests
            # run: TESTPARAM=${{secrets.MAIL_PASSWORD}} npx playwright test --project=firefox
            run: npx playwright test --project=firefox
            continue-on-error: true

          - name: Notify on Google Chat 
            uses: Co-qn/google-chat-notification@v1
            with:
              name: test
              url: ${{ secrets.TEST_WEBHOOK_URL }}
              status: ${{ steps.tests.outcome }}

          # - name: Check test result and comment
          #   uses: peter-evans/create-or-update-comment@v1
          #   with:
          #     token: ${{ secrets.GITHUB_APP_TOKEN }}
          #     issue-number: ${{ github.event.pull_request.number }}
          #     body: |
          #       ${{ steps.tests.outcome == 'failed' && 'Test failed, Please check logs for details.' || 'Test passed :heavy_check_mark:'  }}

          - name: Trigger a workflow in another repo
            uses: actions/github-script@v5
            with:
                script: |
                  github.rest.repos.createDispatchEvent({
                    owner: 'shreybaz',
                    repo: 'test_automation',
                    event_type: 'call',
                    client_payload: { key: "value" }
                  });
                github-token: ${{ secrets.GITHUB_APP_TOKEN }}
